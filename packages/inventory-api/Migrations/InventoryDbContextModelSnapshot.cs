// <auto-generated />
using Darragh.DaprInventory.Services.Inventory.API.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Darragh.DaprInventory.Services.Inventory.API.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    partial class InventoryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Darragh.DaprInventory.Services.Inventory.API.Model.InventoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailableStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("InventoryItem", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableStock = 100,
                            LocationId = "warehouse1",
                            ProductId = "product1"
                        },
                        new
                        {
                            Id = 2,
                            AvailableStock = 100,
                            LocationId = "warehouse1",
                            ProductId = "product2"
                        },
                        new
                        {
                            Id = 3,
                            AvailableStock = 100,
                            LocationId = "shopify",
                            ProductId = "product3"
                        },
                        new
                        {
                            Id = 4,
                            AvailableStock = 100,
                            LocationId = "pointofsale1",
                            ProductId = "product3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
